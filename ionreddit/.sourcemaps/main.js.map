{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/services/reddit.service.ts","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/settings/settings.ts","../../src/pages/reddit/reddit.ts","../../src/pages/details/details.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;ACVyC;AACN;AAClB;AAGjB;IAKI,uBAAY,IAAS;QAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,0BAA0B,CAAC;IAC9C,CAAC;IACD,gCAAQ,GAAR,UAAS,QAAQ,EAAE,KAAK;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,GAAG,GAAG,QAAQ,GAAC,kBAAkB,GAAE,KAAK,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACvG,CAAC;IAZQ,aAAa;QADzB,yEAAU,EAAE;yCAMQ,2DAAI;OALZ,aAAa,CAazB;IAAD,oBAAC;CAAA;AAbyB;;;;;;;;;;;;;;;;;;;;;;;ACLgB;AAEC;AACS;AACN;AAK9C;IAME;QAJA,aAAQ,GAAG,kEAAU,CAAC;QACtB,aAAQ,GAAG,wEAAY,CAAC;QACxB,aAAQ,GAAG,+DAAS,CAAC;IAIrB,CAAC;IARU,QAAQ;QAHpB,wEAAS,CAAC;WACe;SACzB,CAAC;;OACW,QAAQ,CASpB;IAAD,CAAC;AAAA;SATY,QAAQ,e;;;;;;;;;;;;;;;;;;;;ACTqB;AACI;AAM9C;IAEE,mBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAEzC,CAAC;IAJU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;kBAGyC;OAF9B,SAAS,CAMrB;IAAD,CAAC;AAAA;SANY,SAAS,e;;;;;;;;;;;;;;;;;;;;;ACPoB;AACuB;AAMzC;AAMxB;IAIE,sBAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAEzC,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAS,CAAC;YACxB,SAAS,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;IAEL,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,mBAAmB;YAC1B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;YAClC,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAClC,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC/B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE;IACnB,CAAC;IAhCU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;WACQ;SAC7B,CAAC;qBAK2C;OAJhC,YAAY,CAoCxB;IAAD,CAAC;AAAA;SApCY,YAAY,e;;;;;;;;;;;;;;;;;;;;;;ACbiB;AACI;AACkB;AACjB;AAK/C;IAIE,oBAAmB,OAAsB,EAAU,aAA2B;QAA3D,YAAO,GAAP,OAAO,CAAe;QAAU,kBAAa,GAAb,aAAa,CAAc;QAC5E,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,6BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IACD,+BAAU,GAAV;QAEE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IACD,6BAAQ,GAAR,UAAS,QAAQ,EAAE,KAAK;QAAxB,iBAKC;QAHC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC5D,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6BAAQ,GAAR,UAAS,IAAI;QAEX,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qEAAW,EAAE;YAC7B,IAAI,EAAC,IAAI;SACV,CAAC,CAAC;IAEL,CAAC;IACD,mCAAc,GAAd;QAEE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IA/BU,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;WACQ;SAC3B,CAAC;mBAK8E;OAJnE,UAAU,CAgCtB;IAAD,CAAC;AAAA;SAhCY,UAAU,e;;;;;;;;;;;;;;;;;;;;ACRmB;AACe;AAKzD;IAEI,qBAAmB,OAAsB,EAAS,MAAgB;QAA/C,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAU;QAC9D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAJU,WAAW;QAHvB,wEAAS,CAAC;WACkB;SAC5B,CAAC;oBAGoE;OAFzD,WAAW,CAMvB;IAAD,CAAC;AAAA;SANY,WAAW,e;;;;;;;;;;;ACNmD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJG;AACG;AACe;AACjC;AACG;AAEM;AACS;AACN;AACN;AACS;AAEF;AACM;AAoC3D;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,qEAAS;gBACT,8EAAY;gBACZ,wEAAU;gBACV,kEAAQ;gBACR,2EAAW;aACZ;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC;gBACE,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,qEAAS;gBACT,8EAAY;gBACZ,wEAAU;gBACV,kEAAQ;gBACR,2EAAW;aACZ;YACD,SAAS,EAAE;gBACT,4EAAS;gBACT,kFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;aACrD;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACjDoB;AACD;AACY;AACM;AACH;AACV;AAM9C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAJjB,wEAAS,CAAC;YACT,WAAW,gFAAY;WACG;SAC3B,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 157;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 157\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 202;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 202\n// module chunks = 0","import {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class RedditService\r\n{\r\n    http:any;\r\n    baseUrl: String;\r\n\r\n    constructor(http:Http)\r\n    {\r\n        this.http = http;\r\n        this.baseUrl = 'https://www.reddit.com/r';\r\n    }\r\n    getPosts(category, limit){\r\n        return this.http.get(this.baseUrl+'/' + category+'/top.json?limit=' +limit).map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/reddit.service.ts","import { Component } from '@angular/core';\n\nimport { AboutPage } from '../about/about';\nimport { SettingsPage } from '../settings/settings';\nimport { RedditPage } from '../reddit/reddit';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = RedditPage;\n  tab2Root = SettingsPage;\n  tab3Root = AboutPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\nimport { AlertController ,  NavController } from 'ionic-angular';\n\nimport {\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\n\n@Component({\n  selector: 'settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n\n  form;\n\n  constructor(public navCtrl: AlertController) {\n    \n    this.form = new FormGroup({\n      firstName: new FormControl(\"\", Validators.required),\n    });\n\n  }\n\n  doConfirm() {\n    let confirm = this.navCtrl.create({\n      title: 'This is a message',\n      message: this.form.value.firstName,\n      buttons: [\n        {\n          text: 'Disagree',\n          handler: () => {\n            console.log('Disagree clicked');\n          }\n        },\n        {\n          text: 'Agree',\n          handler: () => {\n            console.log('Agree clicked');\n          }\n        }\n      ]\n    });\n    confirm.present()\n  }\n\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {RedditService} from '../../app/services/reddit.service';\nimport {DetailsPage} from '../details/details';\n@Component({\n  selector: 'reddit',\n  templateUrl: 'reddit.html'\n})\nexport class RedditPage {\n  items: any;\n  category: any;  \n  limit:any;\n  constructor(public navCtrl: NavController, private redditService:RedditService) {\n    this.getDefault();\n  }\n  ngOnInit(){\n    this.getPosts(this.category, this.limit);\n  }\n  getDefault()\n  {\n    this.category = 'sports';\n    this.limit = 5;\n  }\n  getPosts(category, limit)\n  {\n    this.redditService.getPosts(category,limit).subscribe(response => {\n      this.items = response.data.children;\n    });\n  }\n  viewItem(item)\n  {\n    this.navCtrl.push(DetailsPage, {\n      item:item\n    });\n    \n  }\n  changeCategory()\n  {\n    this.getPosts(this.category, this.limit);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reddit/reddit.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\n@Component({\r\n  templateUrl: 'details.html'\r\n})\r\nexport class DetailsPage {\r\n    item:any;\r\n    constructor(public navCtrl: NavController, public params:NavParams) {\r\n        this.item = params.get('item');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/details/details.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HttpModule } from '@angular/http';\n\nimport { AboutPage } from '../pages/about/about';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { RedditPage } from '../pages/reddit/reddit';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { DetailsPage } from '../pages/details/details';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    SettingsPage,\n    RedditPage,\n    TabsPage,\n    DetailsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp), \n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    AboutPage,\n    SettingsPage,\n    RedditPage,\n    TabsPage,\n    DetailsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport {RedditService} from './services/reddit.service';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html',\n  providers: [RedditService]\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}