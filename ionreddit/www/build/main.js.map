{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/settings/settings.ts","../../src/pages/reddit/reddit.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/app/services/reddit.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 108\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 149;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 149\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport { AboutPage } from '../about/about';\nimport { SettingsPage } from '../settings/settings';\nimport { RedditPage } from '../reddit/reddit';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = RedditPage;\n  tab2Root = SettingsPage;\n  tab3Root = AboutPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {RedditService} from '../../app/services/reddit.service';\n@Component({\n  selector: 'reddit',\n  templateUrl: 'reddit.html'\n})\nexport class RedditPage {\n\n  constructor(public navCtrl: NavController, private redditService:RedditService) {\n    \n  }\n  ngOnInit(){\n    this.getPosts('sports', 5);\n  }\n  getPosts(category, limit)\n  {\n    this.redditService.getPosts(category,limit).subscribe(response => {\n      console.log(response);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reddit/reddit.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { AboutPage } from '../pages/about/about';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { RedditPage } from '../pages/reddit/reddit';\nimport { TabsPage } from '../pages/tabs/tabs';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    SettingsPage,\n    RedditPage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    AboutPage,\n    SettingsPage,\n    RedditPage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport {RedditService} from './services/reddit.service';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html',\n  providers: [RedditService]\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class RedditService\r\n{\r\n    http:any;\r\n    baseUrl: String;\r\n\r\n    constructor(http:Http)\r\n    {\r\n        this.http = http;\r\n        this.baseUrl = 'https://www.reddit.com/r/';\r\n    }\r\n    getPosts(category, limit){\r\n        return this.http.get(this.baseUrl+'/' + category+'/top.json?limit=' +limit).map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/reddit.service.ts"],"sourceRoot":""}